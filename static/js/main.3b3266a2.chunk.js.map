{"version":3,"sources":["components/Navbar.jsx","components/Clock.jsx","components/Controls.jsx","components/CountdownForm.jsx","components/Countdown.jsx","components/Timer.jsx","index.js"],"names":["Navbar","react_default","a","createElement","className","href","id","NavLink","activeClassName","to","Component","Clock","seconds","min","Math","floor","sec","this","props","formatSeconds","Controls","newStatus","onStatusChange","prevProps","prevState","_this","timerStatus","type","ref","onClick","CountdownForm","e","preventDefault","refs","totalSeconds","value","length","onFormSubmit","onSubmit","placeholder","Countdown","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","countdown","handleFormSubmit","bind","assertThisInitialized","handleStatusChange","currStatus","handleStartCountdown","setState","clearInterval","timer","undefined","_this2","setInterval","secondsRemaining","_this3","_this$state","components_Clock","components_CountdownForm","components_Controls","Timer","handleStart","ReactDOM","render","BrowserRouter","components_Navbar","Route","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.3b3266a2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './../style/Navbar.css';\r\n\r\nclass Navbar extends Component {\r\n    render() { \r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\" href=\"#\">ReactTimer</span>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"./\">Timer</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" activeClassName=\"active-link\" to=\"./countdown\">Countdown</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"project\">Project implemented by Elvin Li</li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nimport './../style/Clock.css';\r\n\r\nclass Clock extends Component {\r\n    formatSeconds(seconds){\r\n\r\n        let min = Math.floor(seconds/60);\r\n        let sec = seconds % 60;\r\n\r\n        if(min < 10){\r\n            min = \"0\" + min;\r\n        }\r\n        if(sec < 10){\r\n            sec = \"0\" + sec;\r\n        }\r\n\r\n        return <span id=\"clock-text\">{min}:{sec}</span>\r\n    }\r\n    render() { \r\n        var {seconds} = this.props;\r\n        return ( \r\n            <div className=\"clock-container\">\r\n                <div className=\"clock mx-auto\">\r\n                    {this.formatSeconds(seconds)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clock;","import React, { Component } from 'react';\r\nimport './../style/Controls.css';\r\n\r\nclass Controls extends Component {\r\n    onStatusChange(newStatus){\r\n        \r\n        return this.props.onStatusChange(newStatus);\r\n        \r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n    }\r\n    render() { \r\n        var {timerStatus} = this.props;\r\n\r\n        var renderingStartStop = () => {\r\n            if(timerStatus === 'started'){\r\n                return <button type=\"button\" ref=\"buttons\" className=\"btn btn-secondary\" onClick={() => this.onStatusChange('paused')}>Pause</button>\r\n            }else{\r\n                return <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.onStatusChange('started')}>Start</button>\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div id=\"controls\">\r\n                {renderingStartStop()}\r\n                <button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => this.onStatusChange('stopped')}>Clear</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Controls;","import React, { Component } from 'react';\r\nimport './../style/CountdownForm.css';\r\n\r\nclass CountdownForm extends Component {\r\n    onFormSubmit(e){\r\n        e.preventDefault();\r\n        var seconds = this.refs.totalSeconds.value;\r\n        if(seconds.length > 0){\r\n            this.refs.totalSeconds.value = '';\r\n            this.props.onFormSubmit(seconds);\r\n        }\r\n\r\n    }\r\n    render() { \r\n        return (\r\n            <form className=\"form-group mx-auto\" onSubmit={(e)=>this.onFormSubmit(e)}>\r\n                <input type=\"text\" className=\"form-control text-center\" ref=\"totalSeconds\" placeholder=\"Enter Countdown in seconds\"/>\r\n                <button className=\"btn btn-primary btn-block\">Start</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountdownForm;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\nimport CountdownForm from './CountdownForm';\r\nimport './../style/main.css';\r\n\r\nclass Countdown extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            countdown: 0,\r\n            timerStatus: 'stopped'\r\n        }\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        this.handleStatusChange = this.handleStatusChange.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        let currStatus = this.state.timerStatus;\r\n        let prevStatus = prevState.timerStatus;\r\n\r\n        if(currStatus !== prevStatus){\r\n            switch(currStatus){\r\n                case 'started':\r\n                    this.handleStartCountdown();\r\n                    break;\r\n                case 'stopped':\r\n                    this.setState({\r\n                        countdown: 0\r\n                    })\r\n                    clearInterval(this.timer);\r\n                    this.timer = undefined;\r\n                    break;\r\n                case 'paused':\r\n                    clearInterval(this.timer);\r\n                    this.timer = undefined;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer);\r\n    }\r\n    handleStartCountdown(){\r\n        this.timer = setInterval(() => {\r\n            var secondsRemaining = this.state.countdown - 1;\r\n            this.setState({\r\n                countdown: secondsRemaining > 0 ? secondsRemaining : 0\r\n            })\r\n            if(secondsRemaining === 0){\r\n                this.setState({timerStatus: 'stopped'})\r\n            }\r\n        }, 1000);\r\n    }\r\n    handleFormSubmit(totalSeconds){\r\n        this.setState({\r\n            countdown: totalSeconds,\r\n            timerStatus: 'submitted'\r\n        });\r\n    }\r\n    handleStatusChange(newStatus){\r\n        this.setState({timerStatus: newStatus});\r\n    }\r\n    render() { \r\n        var {countdown, timerStatus} = this.state;\r\n\r\n        var renderControls = () => {\r\n            if(timerStatus === 'stopped'){\r\n                return <CountdownForm onFormSubmit={this.handleFormSubmit}/>\r\n            } else if(timerStatus === 'submitted'){\r\n                return <Controls timerStatus='stopped' onStatusChange={this.handleStatusChange}/>\r\n            } else{\r\n                return <Controls timerStatus={timerStatus} onStatusChange={this.handleStatusChange}/>\r\n            }\r\n        };\r\n\r\n        return ( \r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\" id=\"page-title\">Countdown App</h2>\r\n                <Clock seconds={countdown}/>\r\n                {renderControls()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Countdown;","import React, { Component } from 'react';\r\n\r\nimport './../style/main.css';\r\nimport Clock from './Clock';\r\nimport Controls from './Controls';\r\n\r\nclass Timer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            seconds: 0,\r\n            timerStatus: 'stopped'\r\n        }\r\n        this.handleStatusChange = this.handleStatusChange.bind(this);\r\n        this.handleStart = this.handleStart.bind(this);\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(this.state.timerStatus !== prevState.timerStatus){\r\n            switch (this.state.timerStatus){\r\n                case 'started':\r\n                    this.handleStart();\r\n                    break;\r\n                case 'paused':\r\n                    clearInterval(this.timer);\r\n                    this.timer = undefined;\r\n                    break;\r\n                case 'stopped':\r\n                    this.setState({\r\n                        seconds: 0\r\n                    })\r\n                    clearInterval(this.timer);\r\n                    this.timer = undefined;\r\n                    break;\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer);\r\n    }\r\n    handleStatusChange(newStatus){\r\n        this.setState({timerStatus: newStatus});\r\n    }\r\n    handleStart(){\r\n        this.timer = setInterval(() => {\r\n            this.setState({\r\n                seconds: this.state.seconds + 1\r\n            })\r\n        }, 1000);\r\n    }\r\n    render() {\r\n        var {seconds, timerStatus} = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <h2 className=\"text-center\">Timer App</h2>\r\n                <Clock seconds={seconds}/>\r\n                <Controls timerStatus={timerStatus} onStatusChange={this.handleStatusChange}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// Component files\r\nimport Navbar from './components/Navbar';\r\nimport Countdown from './components/Countdown';\r\nimport Timer from './components/Timer';\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <Router>\r\n            <div>\r\n                <Navbar/>\r\n                <h1>Hello</h1>\r\n                <Route exact path=\"/\" component={Timer}></Route>\r\n                <Route exact path=\"/countdown\" component={Countdown}></Route>\r\n            </div>\r\n        </Router>\r\n    </div>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}